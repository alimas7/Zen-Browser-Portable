name: Check for new release and build Zen Browser

on:
  schedule:
    - cron: '0 0 * * *'  # Run once a day at midnight UTC
  workflow_dispatch:  # Allow manual triggering

jobs:
  check-for-new-release:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repo
        uses: actions/checkout@v3

      # Step 2: Get the latest release from Zen Browser repository
      - name: Get the latest release from Zen Browser
        id: get_latest_release
        run: |
          latest_release=$(curl -s https://api.github.com/repos/zen-browser/desktop/releases/latest)
          tag_name=$(echo $latest_release | jq -r '.tag_name')
          echo "tag_name=$tag_name" >> $GITHUB_ENV  # Store the tag name in the environment variable

      # Step 3: Check if the release tag exists locally (in your forked repo)
      - name: Check if the release exists locally
        id: check_local_tag
        run: |
          if git tag -l "$tag_name" > /dev/null 2>&1; then
            echo "Release $tag_name already exists locally. Skipping build."
            exit 0  # Exit the workflow if the release exists locally
          fi

      # Step 4: Run the build script to create release files (only if the release tag doesn't exist)
      - name: Run the build script to create release
        if: success()  # Proceed only if the release wasn't found locally
        run: |
          chmod +x ./zenmake_for_dev.sh  # Make sure the build script is executable
          ./zenmake_for_dev.sh  # Run the build script

      # Step 5: Set up GitHub CLI authentication
      - name: Set up GitHub CLI authentication
        run: |
          echo "GH_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV

      # Step 6: Create the release on GitHub and upload assets (only if the release tag doesn't exist)
      - name: Create release on GitHub and upload assets
        if: success()  # Proceed only if the build was successful
        run: |
          gh release create "$tag_name" zen-linux-portable.zip zen-windows-portable.zip zen-portable.zip \
          --title "Zen Browser $tag_name" --notes "Automated build for release $tag_name" --repo $GITHUB_REPOSITORY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Ensure authentication
